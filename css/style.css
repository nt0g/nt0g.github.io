@charset "utf-8";
@import url("vars.css");
@import url("icons.css");


/*  media queries  */

@media (min-width: 0em) {
.scroller {
	inline-size: 100vw;
}
.block {
	margin: 1rem 0rem 1rem 0rem;
}
.block > .gallery {
	padding-inline: 0.5rem;
	border-radius: 0;
}
.gallery-clipper {
	clip-path: inset(0 round calc(0.25 * var(--block-borderradius)));
	gap: 0.5rem;
}
.gallery-item > *:is(.gallery-item-image, .gallery-item-title, .gallery-item-access) {
	border-radius: calc(0.25 * var(--block-borderradius));
}
.content > .block > *:not(:only-child) { /*  */
	text-align: center;
}
header {
	padding: 1rem 2rem 1rem 2rem;
}
footer {
	padding: 1rem 2rem 1rem 2rem;
}
header .titlecontent {
	font-size: var(--font-size-head);
}
.bar {
	justify-content: center;
}
label.switch {
	margin: 0;
}
.hidden {
	display: none;
}
.imagecontent {
	flex-flow: column wrap;
	justify-content: center;
}
}
@media (min-width: 40em) {
.block {
	margin: 1rem 2rem 1rem 2rem;
}
.block > .gallery {
	padding: 1rem;
	border-radius: var(--block-borderradius);
}
.gallery-clipper {
	clip-path: inset(0 round calc(0.6 * var(--block-borderradius)));
	gap: 1rem;
}
.gallery-item > *:is(.gallery-item-image, .gallery-item-title, .gallery-item-access) {
	border-radius: calc(0.6 * var(--block-borderradius));
}
.content > .block > *:not(:only-child) { /*  */
	text-align: left;
}
header {
	padding: 5rem 4rem 1rem 4rem;
}
footer {
	padding: 1rem 4rem 5rem 4rem;
}
label.switch {
	margin: 0rem 1rem 0rem 1rem;
}
.hidden {
	display: inherit;
}
.bar {
	justify-content: flex-start;
}
.imagecontent {
	flex-flow: row nowrap;
	justify-content: space-between;
}
}
@media (min-width: 60em) {
.scroller {
	inline-size: 50em;
}
.block > .gallery {
	padding: 2rem;
}
.gallery-clipper {
	clip-path: inset(0 round calc(0.5 * var(--block-borderradius)));
	gap: 1.5rem;
}
.gallery-item > *:is(.gallery-item-image, .gallery-item-title, .gallery-item-access) {
	border-radius: calc(0.5 * var(--block-borderradius));
}
header .titlecontent {
	font-size: calc(1.25 * var(--font-size-head));
}
}


/*  AnImAtIoNs!  */
@media (prefers-reduced-motion: no-preference) {
:root:not([data-motion='true']) :focus-visible {
	transition-duration: var(--animation-duration-fast) !important;
	transition-timing-function: var(--animation-bounceback-interpolator) !important;
}
:root:not([data-motion='true']) input.switch:focus-visible + label.switch > .front,
:root:not([data-motion='true']) input.coll:focus-visible + label.coll,
:root:not([data-motion='true']) .push-an:focus-visible > .front {
	transition-duration: var(--animation-duration-fast);
	transition-timing-function: var(--animation-bounceback-interpolator);
}
:root:not([data-motion='true']).animated,
:root:not([data-motion='true']).animated *:not(button),
:root:not([data-motion='true']).animated *:not(button):before,
:root:not([data-motion='true']).animated *:not(button):after {
	transition-property: all;
	transition-duration: var(--animation-duration-plus-slow);
	transition-timing-function: var(--animation-interpolator);
}
:root:not([data-motion='true']) * {
	scroll-behavior: smooth;
}
:root:not([data-motion='true']) a:hover {
	text-underline-offset: calc(4 * var(--borderwidth));
	text-decoration-thickness: var(--borderwidth);
}
:root:not([data-motion='true']) a:active {
	text-underline-offset: var(--borderwidth);
	text-decoration-thickness: var(--borderwidth);
	
	transition-duration: var(--animation-duration-fast) !important;
}
:root:not([data-motion='true']) .raisable:hover .image:not(.size-wide) .image-front {
	transform: scale(1.1);
}
:root:not([data-motion='true']) .image .image-back {
	filter: var(--theme-blur-filter);
	transform: translateY(0.5rem);
}
:root:not([data-motion='true']) .raisable:hover .image .image-back {
	filter: blur(0) opacity(0);
}
:root:not([data-motion='true']) .push-an {
    transition-duration: var(--animation-duration-slow);
	transition-timing-function: var(--animation-interpolator);
}
:root:not([data-motion='true']) .front {
    transition-duration: var(--animation-duration-slow);
}
:root:not([data-motion='true']) .push-an:hover {
    transition-duration: var(--animation-duration-slow);
	transition-timing-function: var(--animation-interaction-interpolator);
}
:root:not([data-motion='true']) .push-an:hover .front {
    transition-duration: var(--animation-duration);
	transition-timing-function: var(--animation-bounceback-interpolator);
}
:root:not([data-motion='true']) .push-an:hover .shadow {
    transition-duration: var(--animation-duration);
	transition-timing-function: var(--animation-bounceback-interpolator);
}
:root:not([data-motion='true']) .push-an:active .front {
    transition-duration: var(--animation-duration-plus-fast);
	transition-timing-function: var(--animation-interaction-interpolator);
}
:root:not([data-motion='true']) .push-an:active .shadow {
    transition-duration: var(--animation-duration-plus-fast);
}
:root:not([data-motion='true']) #c-inp + label.coll + #c-div,
:root:not([data-motion='true']) #c-inp:checked + label.coll + #c-div {
	transition-duration: var(--animation-duration-slow);
}
:root:not([data-motion='true']) .clock > .separator {
	animation: blinker 1s var(--animation-interpolator) infinite 
}
:root:not([data-motion='true']) .blinker {
	animation: blinker 1s var(--animation-interpolator) infinite reverse;
}
}

/*  common layout  */
body {
	margin: 0rem;
	background: var(--background-color);
	font-feature-settings: "kern" 1, "dlig" 1;
}

.test {
	border: 1px solid red;
}


/*  block rules  */
.wrapper {
	display: flex;
	justify-content: center;
}
.block {
	contain: layout;
	
	display: flex;
	flex-flow: column nowrap;
	
	border-radius: var(--block-borderradius);
}

/*  block effects  */
.raised {
	background-color: var(--block-bg-color-hover);
	box-shadow: var(--theme-block-shadow-1);
}
.raisable {
	box-shadow: var(--theme-block-shadow-0);
}
.raisable:is(:hover, :active, :focus) {
	background-color: var(--block-bg-color-hover);
	box-shadow: var(--theme-block-shadow-2);
}
.lowered {
	background-color: var(--block-bg-color);
}

/*  header  */
header,
footer {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	
	z-index: 5;
}
header {
	border-block-end: var(--theme-border);
}
footer {
	border-block-start: var(--theme-border);
}
.spacer {
	flex-basis: 0rem;
	flex-grow: 10;
}
.sticky {
	position: sticky;
	inset-block-start: 0;
	background-color: var(--background-color);
}

/*  content merging in a block  */
.block > * {
	padding: 2rem;
}
.block > *:first-child:not(:only-child) {
	padding-block-start: 2rem;
	padding-block-end: 0.25rem;
	
	border-radius: var(--block-borderradius) var(--block-borderradius) 0 0;
}
.block > *:not(:first-child):not(:last-child):not(:only-child):not(.coll) {
	padding-block: 0.25rem;
	border-radius: 0;
}
.block > *:last-child:not(:only-child) {
	padding-block-start: 0.25rem;
	padding-block-end: 2rem;
	
	border-radius: 0 0 var(--block-borderradius) var(--block-borderradius);
}
.content > .block > *:not(:only-child) { /*  */
	padding-block: 0.5rem;
}
/* content merging in a bar */
.bar {
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
}
.bar > * {	
	border-radius: var(--borderradius);
}
.bar > *:first-child:not(:only-child),
.bar > input[type="checkbox"]:first-child + *:nth-child(2):not(:only-child) { /* ля костыль */
	margin-inline-end: 0;
	border-radius: var(--borderradius) 0 0 var(--borderradius);
}
.bar > *:not(:first-child):not(:last-child):not(:only-child) {
	margin-inline: 0;
	border-radius: 0;
}
.bar > *:last-child:not(:only-child) {
	margin-inline-start: 0;
	border-radius: 0 var(--borderradius) var(--borderradius) 0;
}


/* specific bar type rules */
.actbar {
	padding: 0;
	flex-flow: row-reverse nowrap;
}
.content.bar .front {
	min-block-size: 2rem;
}


/*  content  */
html {
	font-size: var(--font-size);
}
.content {
	color: var(--text-color);
	border-radius: var(--block-borderradius);
}
footer .content {
	color: var(--text-color-lighter);
}

*:is(button, .switch) > .content {	
	display: flex;
	flex-flow: row wrap;
	align-items: center;

	padding: 0.5rem 1rem;
	
	color: var(--background-color);
	
	font-family: var(--font-button);
	font-size: var(--font-size-button);
	font-weight: var(--font-weight-button);
}

.titlecontent {
	color: var(--text-color-darker);
	
	font-family: var(--font-head);
	font-size: var(--font-size-head);
	font-weight: var(--font-weight-head);
    /*text-align: center;*/
}
header .titlecontent {
	color: var(--accent-color-text);
}

.textcontent {
	font-family: var(--font-content);
	font-size: var(--font-size-content);
	font-weight: var(--font-weight-content);
	
	hyphens: auto;
}
footer .textcontent {
	font-size: var(--font-size-mono);
}
.imagecontent {
	display: flex;
	align-items: center;
}
a {
	display: inline-block;
	
	color: var(--accent-color-text);
	text-decoration: underline var(--accent-color-text) solid;
	text-underline-offset: calc(2 * var(--borderwidth));
	text-decoration-thickness: var(--borderwidth);
	
	border-radius: calc(0.5 * var(--borderradius));
}
a:hover {
	background-color: var(--bg-color-accented);
}
kbd {
	padding-inline: 0.5rem;
	
	color: var(--text-color);
	background-color: var(--block-bg-color-hover);
	
	font-family: var(--font-button);
	font-size: var(--font-size-content);
	font-weight: var(--font-weight-content);
	
	border-radius: calc(0.5 * var(--borderradius));
    border-block-end: solid var(--borderwidth) var(--accent-color-darker);
}
kbd:is(:active, :focus) {
	background-color: var(--bg-color-accented);
}

pre {
	padding: 1rem;
	
	color: var(--text-color-lighter);
	background-color: var(--bg-color-accented);
	
	font-family: var(--font-mono);
	font-size: var(--font-size-mono);
	font-weight: var(--font-weight-mono);
	
	border-radius: calc(0.5 * var(--borderradius));
	border-block-end: solid var(--borderwidth) var(--accent-color-darker);
}
.hl-user {
	color: var(--accent-color-text);
	filter: hue-rotate(-90deg) brightness(0.75) contrast(150%);
}
.hl-dir {
	color: var(--accent-color-text);
	filter: hue-rotate(-45deg) brightness(0.75) contrast(150%);
}

/*  accepted image sizes  */
.size-s {
	max-inline-size: 5rem;
	max-block-size: 5rem;
	
	border-radius: calc(0.25 * var(--block-borderradius));
}
.size-s.image > .image-clipper {
	clip-path: inset(0 round calc(0.25 * var(--block-borderradius)));
}
.size-m {
	max-inline-size: 10rem;
	max-block-size: 10rem;
	
	border-radius: calc(0.375 * var(--block-borderradius));
}
.image-clipper {
	clip-path: inset(0 round calc(0.375 * var(--block-borderradius)));
}
.size-l {
	max-inline-size: 15rem;
	max-block-size: 15rem;
	
	border-radius: calc(0.5 * var(--block-borderradius));
}
.size-l.image > .image-clipper {
	clip-path: inset(0 round calc(0.5 * var(--block-borderradius)));
}
.size-full {
	max-inline-size: 100%;
	
	border-radius: calc(0.25 * var(--block-borderradius));
}
.gallery-clipper {
	display: flex;
	flex-flow: row nowrap;
	overflow: auto;
	
	scrollbar-width: none;
	scroll-snap-type: x mandatory;
}
.gallery-clipper::-webkit-scrollbar {
  display: none;
}
.gallery-item { /*  needs attention!  */
	position: relative;
	display: grid;
	
	min-inline-size: 80%;
	max-inline-size: 80%;
	/*inline-size: 80%;
	max-block-size: 100%;*/ /*shrug*/
	
	scroll-snap-align: center;
}
.gallery-item-image,
.gallery-item-title,
.gallery-item-access {
	grid-area: 1/2;
}
.gallery-item > .gallery-item-image {
	inline-size: 100%;
	
	aspect-ratio: auto 1/1;
	object-fit: cover;
}
.gallery-item > .gallery-item-title {
	display: flex;
	flex-direction: column;
	justify-content: flex-end;
	
	padding-inline: 1rem;
	padding-block: 0.5rem;
	background: linear-gradient(hsl(0 0% 0% / 0) 60%, hsl(0 0% 0% / 50%) 100%);
	
}
.gallery-item > .gallery-item-title > .textcontent {
	overflow: hidden;
	max-block-size: 0;
	transition-delay: 1s;
	filter: opacity(0%);
}
.gallery-item:is(:hover, :active) > .gallery-item-title > .textcontent {
	max-block-size: 4rem;
	transition-delay: 0s;
	filter: opacity(100%);
}
.gallery-item-title > * {
	color: white;
}
.gallery-item-title > .textcontent {
	font-family: var(--font-mono);
	font-size: var(--font-size-mono);
	font-weight: var(--font-weight-mono);
	/*font-style: oblique;*/
}
.gallery-item-title > .titlecontent {
	font-family: var(--font-content);
	font-size: var(--font-size-content);
	font-weight: var(--font-weight-button);
}
/*  images  */
.image {
	position: relative;
}
.image > .image-clipper {
	position: relative;
	max-inline-size: inherit;
	max-block-size: inherit;
}
.image .image-front,
.image .image-back {
	max-inline-size: inherit;
	max-block-size: inherit;
	
	border-radius: inherit;
}
.image .image-back {
	position: absolute;
	inset-block-start: 0;
	inset-inline-start: 0;
}


/*  themeable images  */
.bgless {
	mix-blend-mode: multiply;
}
html[data-dark-mode='true'] .bgless {
	filter: invert(100%) hue-rotate(180deg) brightness(75%) saturate(125%);
	mix-blend-mode: screen;
}
@media (prefers-color-scheme: dark) { /*  жутчайший костыль  */
.bgless {
	filter: invert(100%) hue-rotate(180deg) brightness(75%) saturate(125%);
	mix-blend-mode: screen;
}
html[data-dark-mode='false'] .bgless {
	filter: none;
	mix-blend-mode: multiply;
}
}


/*  icon appearance  */
.icon {
	position: relative;
	display: inline-block;
	block-size: var(--font-size-content);
	inline-size: var(--font-size-content);
}
.inactive {
	opacity: 50%;
}
.front .icon {
	block-size: var(--font-size-button);
	inline-size: var(--font-size-button);
}
.masked {
	mask-repeat: no-repeat;
	mask-position: center;
	background-color: var(--text-color);
	mask-image: var(--mask-svg);
	-webkit-mask-image: var(--mask-svg);
}


/*  stuff  */
input {
  accent-color: var(--accent-color-lighter);
}


/*  https://www.joshwcomeau.com/animation/3d-button/  */
.push-an {
	position: relative;
	padding: 0;
	
	background: transparent;
	border: none;
	border-radius: var(--borderradius);
	
	cursor: pointer;
    transform: translateY(0.2rem);
}
.push-an:hover {
	filter: brightness(110%);
}
.push-an:active {
	filter: brightness(90%);
}
.push-an:focus {
	outline: none;
	/*outline-offset: var(--borderwidth);*/
}
.shadow {
	position: absolute;
	inset-block-start: 0;
	inset-inline-start: 0;
	inline-size: 100%;
	block-size: 100%;

	border-radius: inherit;
	background-color: var(--accent-color-10);
	transform: translateY(0.1rem);
}
.push-an:hover .shadow {
	transform: translateY(0.15rem);
}
.push-an:active .shadow {
	transform: translateY(0.05rem);
}
.edge {
	position: absolute;
	inset-block-start: 0;
	inset-inline-start: 0;
	inline-size: 100%;
	block-size: 100%;
	border-radius: inherit;
	background-color: var(--accent-color-darker);
}
.front {
	display: block;
	position: relative;
	padding: 0;
	/*box-sizing: border-box;*/
	border-radius: inherit;
	border-block-start: solid var(--borderwidth) hsl(0 0% 100% / 0.05);
	border-block-end: solid var(--borderwidth) hsl(0 0% 0% / 0.05);
	background-color: var(--accent-color-lighter);
	
    transform: translateY(-0.25rem);
}
.push-an:hover .front {
	transform: translateY(-0.3rem);
}
.push-an:active .front {
	transform: translateY(-0.1rem);
}


/*  button colors  */
.push-an.syn > .shadow,
.push-an.con > .shadow {
	background-color: hsla(0,0%,0%,0.05);
}
.push-an.syn:hover,
.push-an.con:hover {
	filter: brightness(90%);
}
.push-an.syn:hover,
.push-an.con:hover {
	filter: brightness(85%);
}	
.push-an.con > .edge {
	background-color: var(--text-color-lighter);
}
.push-an.con > .front {
	background-color: var(--text-color-darker);
}

.push-an.syn > .edge {
	background-color: var(--bg-color-accented-darker);
}
.push-an.syn > .front {
	background-color: var(--bg-color-accented-lighter);
}
.push-an.syn .content {
	color: var(--text-color);
}
.push-an:not(.syn) .front .masked {
	background-color: var(--background-color);
}

.colored {
	border-block-start: solid var(--borderwidth) hsl(0 0% 100% / 0.05);
	border-block-end: solid var(--borderwidth) hsl(0 0% 0% / 0.05);
}

/*  switch style checkbox  */
input.switch {
	position: absolute;
	transform: scale(0);
}
input.switch:focus-visible + label.switch > .front,
.push-an:focus-visible > .front {
	--outline-color: var(--background-color);
	outline: solid calc(1.5 * var(--borderwidth)) var(--outline-color);
	outline-offset: calc(-3 * var(--borderwidth));
}
.push-an.syn:focus-visible > .front {
	--outline-color: var(--text-color);
}
input.coll:focus-visible + label.coll {
	--outline-color: var(--text-color);
	outline: solid calc(1.5 * var(--borderwidth)) var(--outline-color);
	outline-offset: calc(-3 * var(--borderwidth));
}
a:focus-visible {
	--outline-color: var(--accent-color-text);
	outline: solid calc(1.5 * var(--borderwidth)) var(--outline-color);
	outline-offset: var(--borderwidth);
	text-decoration: none;
}
.gallery-item-access:focus-visible {
	outline: solid calc(1.5 * var(--borderwidth)) white;
	outline-offset: calc(-3 * var(--borderwidth));
}
label.switch {
	/*opacity: 0.75;*/
}
.small > .front {
	justify-content: center;
	inline-size: 1rem;
	block-size: 1rem;
}
.small > .content {
	--font-size-button: 16px; /* kostull */
	padding: 0.25rem 0.5rem;
}
.switch:checked + label.switch {
    filter: brightness(0.75) saturate(1.5);
}
.switch:checked + label.switch > .front {
    transform: translateY(calc(-1.5 * var(--borderwidth)));
	/*border: solid var(--borderinline-size) var(--accent-color);*/
}
.switch:checked + label.switch:active > .front {
    transform: translateY(calc(-1 * var(--borderwidth)));
}/*
label.switch > .front::after {
	content: "◎";
}
.switch:checked + label.switch > .front::after {
	content: "◉";
}*/


/* collapsible checkbox */
#c-inp + label.coll + #c-div {
	max-height: 0;
	padding-top: 0;
	padding-bottom: 0;
	/*opacity: 0;*/
	
	overflow: hidden;
}
#c-inp:checked + label.coll + #c-div {
	max-height: 54rem;
	padding-top: 1rem;
	padding-bottom: 2rem;
	/*opacity: 1;*/
}
input.coll {
	position: absolute;
	transform: scale(0);
}
label.coll {
	border-radius: inherit;
	
	cursor: pointer;
}
label.coll::before {
	content: ' ';
	display: inline-block;

	border-top: 5px solid transparent;
	border-bottom: 5px solid transparent;
	border-left: 5px solid currentColor;

	vertical-align: middle;
	margin-left: -0.75rem;
	margin-right: 0.5rem;
	
	transform: translateY(-2px);
}
input.coll:checked + label.coll::before {
	transform: rotate(90deg) translateX(-3px);
}

label.coll:hover {
	background-color: var(--accent-color-10);
}


/*  animations  */
@keyframes blinker {
	0% {opacity: 1;/* transform: scale(1)*/;}
	25% {opacity: 0;/* transform: scale(0)*/;}
	100% {opacity: 1;/* transform: scale(1)*/;}
}

.clock {
	display: flex;
	flex-flow: row wrap;
}
